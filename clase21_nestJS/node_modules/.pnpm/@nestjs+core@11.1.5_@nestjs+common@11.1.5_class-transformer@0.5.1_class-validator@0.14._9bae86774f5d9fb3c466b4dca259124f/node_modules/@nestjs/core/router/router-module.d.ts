import { DynamicModule } from '@nestjs/common';
import { Module as ModuleClass } from '.pnpm/@nestjs+core@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14._9bae86774f5d9fb3c466b4dca259124f/node_modules/@nestjs/core/injector/module';
import { ModulesContainer } from '.pnpm/@nestjs+core@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14._9bae86774f5d9fb3c466b4dca259124f/node_modules/@nestjs/core/injector/modules-container';
import { Routes } from '.pnpm/@nestjs+core@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14._9bae86774f5d9fb3c466b4dca259124f/node_modules/@nestjs/core/router/interfaces';
export declare const ROUTES: unique symbol;
export declare const targetModulesByContainer: WeakMap<ModulesContainer, WeakSet<ModuleClass>>;
/**
 * @publicApi
 */
export declare class RouterModule {
    private readonly modulesContainer;
    private readonly routes;
    constructor(modulesContainer: ModulesContainer, routes: Routes);
    static register(routes: Routes): DynamicModule;
    private deepCloneRoutes;
    private initialize;
    private registerModulePathMetadata;
    private updateTargetModulesCache;
}
