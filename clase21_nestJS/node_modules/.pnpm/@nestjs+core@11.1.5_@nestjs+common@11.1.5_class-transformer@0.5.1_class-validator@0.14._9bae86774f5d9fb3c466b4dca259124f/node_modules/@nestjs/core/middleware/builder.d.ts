import { HttpServer, MiddlewareConsumer, Type } from '@nestjs/common/interfaces';
import { MiddlewareConfigProxy, MiddlewareConfiguration } from '@nestjs/common/interfaces/middleware';
import { RouteInfoPathExtractor } from '.pnpm/@nestjs+core@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14._9bae86774f5d9fb3c466b4dca259124f/node_modules/@nestjs/core/middleware/route-info-path-extractor';
import { RoutesMapper } from '.pnpm/@nestjs+core@11.1.5_@nestjs+common@11.1.5_class-transformer@0.5.1_class-validator@0.14._9bae86774f5d9fb3c466b4dca259124f/node_modules/@nestjs/core/middleware/routes-mapper';
export declare class MiddlewareBuilder implements MiddlewareConsumer {
    private readonly routesMapper;
    private readonly httpAdapter;
    private readonly routeInfoPathExtractor;
    private readonly middlewareCollection;
    constructor(routesMapper: RoutesMapper, httpAdapter: HttpServer, routeInfoPathExtractor: RouteInfoPathExtractor);
    apply(...middleware: Array<Type<any> | Function | Array<Type<any> | Function>>): MiddlewareConfigProxy;
    build(): MiddlewareConfiguration[];
    getHttpAdapter(): HttpServer;
    private static readonly ConfigProxy;
}
